{"version":3,"sources":["../../../src/js/input-range/track.jsx"],"names":["Track","children","node","isRequired","classNames","objectOf","string","draggableTrack","bool","markers","arrayOf","shape","leftPercent","number","className","onTrackDrag","func","onTrackMouseDown","percentages","props","trackDragEvent","getBoundingClientRect","width","max","min","left","removeDocumentMouseMoveListener","ownerDocument","addEventListener","handleMouseMove","removeDocumentMouseUpListener","handleMouseUp","removeEventListener","event","clientX","touches","trackClientRect","getClientRect","position","x","y","addDocumentMouseMoveListener","addDocumentMouseUpListener","preventDefault","handleMouseDown","activeTrackStyle","getActiveTrackStyle","track","handleTouchStart","activeTrack","map","marker","percentage","class","Component"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAGqBA,K;;;;;;AACnB;;;;;;;;;;wBAUuB;AACrB,aAAO;AACLC,kBAAU,oBAAUC,IAAV,CAAeC,UADpB;AAELC,oBAAY,oBAAUC,QAAV,CAAmB,oBAAUC,MAA7B,EAAqCH,UAF5C;AAGLI,wBAAgB,oBAAUC,IAHrB;AAILC,iBAAS,oBAAUC,OAAV,CAAkB,oBAAUC,KAAV,CAAgB;AACzCC,uBAAa,oBAAUC,MADkB;AAEzCC,qBAAW,oBAAUR;AAFoB,SAAhB,CAAlB,CAJJ;AAQLS,qBAAa,oBAAUC,IARlB;AASLC,0BAAkB,oBAAUD,IAAV,CAAeb,UAT5B;AAULe,qBAAa,oBAAUb,QAAV,CAAmB,oBAAUQ,MAA7B,EAAqCV;AAV7C,OAAP;AAYD;;AAED;;;;;;;;;;;AAQA,iBAAYgB,KAAZ,EAAmB;AAAA;;AAGjB;;;;AAHiB,8GACXA,KADW;;AAOjB,UAAKjB,IAAL,GAAY,IAAZ;AACA,UAAKkB,cAAL,GAAsB,IAAtB;AARiB;AASlB;;AAED;;;;;;;;oCAIgB;AACd,aAAO,KAAKlB,IAAL,CAAUmB,qBAAV,EAAP;AACD;;AAED;;;;;;;0CAIsB;AACpB,UAAMC,QAAW,CAAC,KAAKH,KAAL,CAAWD,WAAX,CAAuBK,GAAvB,GAA6B,KAAKJ,KAAL,CAAWD,WAAX,CAAuBM,GAArD,IAA4D,GAAvE,MAAN;AACA,UAAMC,OAAU,KAAKN,KAAL,CAAWD,WAAX,CAAuBM,GAAvB,GAA6B,GAAvC,MAAN;;AAEA,aAAO,EAAEC,UAAF,EAAQH,YAAR,EAAP;AACD;;AAED;;;;;;;;mDAK+B;AAC7B,WAAKI,+BAAL;AACA,WAAKxB,IAAL,CAAUyB,aAAV,CAAwBC,gBAAxB,CAAyC,WAAzC,EAAsD,KAAKC,eAA3D;AACD;;AAED;;;;;;;;iDAK6B;AAC3B,WAAKC,6BAAL;AACA,WAAK5B,IAAL,CAAUyB,aAAV,CAAwBC,gBAAxB,CAAyC,SAAzC,EAAoD,KAAKG,aAAzD;AACD;;AAED;;;;;;;sDAIkC;AAChC,WAAK7B,IAAL,CAAUyB,aAAV,CAAwBK,mBAAxB,CAA4C,WAA5C,EAAyD,KAAKH,eAA9D;AACD;;AAED;;;;;;;oDAIgC;AAC9B,WAAK3B,IAAL,CAAUyB,aAAV,CAAwBK,mBAAxB,CAA4C,SAA5C,EAAuD,KAAKD,aAA5D;AACD;;AAED;;;;;;;;oCAMgBE,K,EAAO;AACrB,UAAI,CAAC,KAAKd,KAAL,CAAWZ,cAAhB,EAAgC;AAC9B;AACD;;AAED,UAAI,KAAKa,cAAL,KAAwB,IAA5B,EAAkC;AAChC,aAAKD,KAAL,CAAWJ,WAAX,CAAuBkB,KAAvB,EAA8B,KAAKb,cAAnC;AACD;;AAED,WAAKA,cAAL,GAAsBa,KAAtB;AACD;;AAED;;;;;;;oCAKgB;AACd,UAAI,CAAC,KAAKd,KAAL,CAAWZ,cAAhB,EAAgC;AAC9B;AACD;;AAED,WAAKmB,+BAAL;AACA,WAAKI,6BAAL;AACA,WAAKV,cAAL,GAAsB,IAAtB;AACD;;AAED;;;;;;;oCAKgBa,K,EAAO;AACrB,UAAMC,UAAUD,MAAME,OAAN,GAAgBF,MAAME,OAAN,CAAc,CAAd,EAAiBD,OAAjC,GAA2CD,MAAMC,OAAjE;AACA,UAAME,kBAAkB,KAAKC,aAAL,EAAxB;AACA,UAAMC,WAAW;AACfC,WAAGL,UAAUE,gBAAgBX,IADd;AAEfe,WAAG;AAFY,OAAjB;;AAKA,WAAKrB,KAAL,CAAWF,gBAAX,CAA4BgB,KAA5B,EAAmCK,QAAnC;;AAEA,UAAI,KAAKnB,KAAL,CAAWZ,cAAf,EAA+B;AAC7B,aAAKkC,4BAAL;AACA,aAAKC,0BAAL;AACD;AACF;;AAED;;;;;;;qCAKiBT,K,EAAO;AACtBA,YAAMU,cAAN;;AAEA,WAAKC,eAAL,CAAqBX,KAArB;AACD;;AAED;;;;;;;6BAIS;AAAA;;AAAA,UACCxB,OADD,GACa,KAAKU,KADlB,CACCV,OADD;;AAEP,UAAMoC,mBAAmB,KAAKC,mBAAL,EAAzB;;AAEA,aACE;AAAA;AAAA;AACE,qBAAW,KAAK3B,KAAL,CAAWf,UAAX,CAAsB2C,KADnC;AAEE,uBAAa,KAAKH,eAFpB;AAGE,wBAAc,KAAKI,gBAHrB;AAIE,eAAK,aAAC9C,IAAD,EAAU;AAAE,mBAAKA,IAAL,GAAYA,IAAZ;AAAmB,WAJtC;AAKE;AACE,iBAAO2C,gBADT;AAEE,qBAAW,KAAK1B,KAAL,CAAWf,UAAX,CAAsB6C,WAFnC,GALF;AAQGxC,mBAAWA,QAAQyC,GAAR,CAAY;AAAA,iBACtB;AACE,iBAAKC,OAAOC,UADd;AAEE,uBAAWD,OAAOE,KAFpB;AAGE,mBAAO;AACLf,wBAAU,UADL,EACiBb,MAAS0B,OAAOC,UAAP,GAAoB,GAA7B;AADjB,aAHT,GADsB;AAAA,SAAZ,CARd;AAgBG,aAAKjC,KAAL,CAAWlB;AAhBd,OADF;AAoBD;;;;EAjMgC,gBAAMqD,S;kBAApBtD,K","file":"track.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'autobind-decorator';\n\n/**\n * @ignore\n */\nexport default class Track extends React.Component {\n  /**\n   * @override\n   * @return {Object}\n   * @property {Function} children\n   * @property {Function} classNames\n   * @property {Boolean} draggableTrack\n   * @property {Function} onTrackDrag\n   * @property {Function} onTrackMouseDown\n   * @property {Function} percentages\n   */\n  static get propTypes() {\n    return {\n      children: PropTypes.node.isRequired,\n      classNames: PropTypes.objectOf(PropTypes.string).isRequired,\n      draggableTrack: PropTypes.bool,\n      markers: PropTypes.arrayOf(PropTypes.shape({\n        leftPercent: PropTypes.number,\n        className: PropTypes.string,\n      })),\n      onTrackDrag: PropTypes.func,\n      onTrackMouseDown: PropTypes.func.isRequired,\n      percentages: PropTypes.objectOf(PropTypes.number).isRequired,\n    };\n  }\n\n  /**\n   * @param {Object} props\n   * @param {InputRangeClassNames} props.classNames\n   * @param {Boolean} props.draggableTrack\n   * @param {Function} props.onTrackDrag\n   * @param {Function} props.onTrackMouseDown\n   * @param {number} props.percentages\n   */\n  constructor(props) {\n    super(props);\n\n    /**\n     * @private\n     * @type {?Component}\n     */\n    this.node = null;\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @return {ClientRect}\n   */\n  getClientRect() {\n    return this.node.getBoundingClientRect();\n  }\n\n  /**\n   * @private\n   * @return {Object} CSS styles\n   */\n  getActiveTrackStyle() {\n    const width = `${(this.props.percentages.max - this.props.percentages.min) * 100}%`;\n    const left = `${this.props.percentages.min * 100}%`;\n\n    return { left, width };\n  }\n\n  /**\n   * Listen to mousemove event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseMoveListener() {\n    this.removeDocumentMouseMoveListener();\n    this.node.ownerDocument.addEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * Listen to mouseup event\n   * @private\n   * @return {void}\n   */\n  addDocumentMouseUpListener() {\n    this.removeDocumentMouseUpListener();\n    this.node.ownerDocument.addEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseMoveListener() {\n    this.node.ownerDocument.removeEventListener('mousemove', this.handleMouseMove);\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  removeDocumentMouseUpListener() {\n    this.node.ownerDocument.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event\n   * @return {void}\n   */\n  @autobind\n  handleMouseMove(event) {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    if (this.trackDragEvent !== null) {\n      this.props.onTrackDrag(event, this.trackDragEvent);\n    }\n\n    this.trackDragEvent = event;\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  @autobind\n  handleMouseUp() {\n    if (!this.props.draggableTrack) {\n      return;\n    }\n\n    this.removeDocumentMouseMoveListener();\n    this.removeDocumentMouseUpListener();\n    this.trackDragEvent = null;\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleMouseDown(event) {\n    const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n    const trackClientRect = this.getClientRect();\n    const position = {\n      x: clientX - trackClientRect.left,\n      y: 0,\n    };\n\n    this.props.onTrackMouseDown(event, position);\n\n    if (this.props.draggableTrack) {\n      this.addDocumentMouseMoveListener();\n      this.addDocumentMouseUpListener();\n    }\n  }\n\n  /**\n   * @private\n   * @param {SyntheticEvent} event - User event\n   */\n  @autobind\n  handleTouchStart(event) {\n    event.preventDefault();\n\n    this.handleMouseDown(event);\n  }\n\n  /**\n   * @override\n   * @return {JSX.Element}\n   */\n  render() {\n    const { markers } = this.props;\n    const activeTrackStyle = this.getActiveTrackStyle();\n\n    return (\n      <div\n        className={this.props.classNames.track}\n        onMouseDown={this.handleMouseDown}\n        onTouchStart={this.handleTouchStart}\n        ref={(node) => { this.node = node; }}>\n        <div\n          style={activeTrackStyle}\n          className={this.props.classNames.activeTrack} />\n        {markers && markers.map(marker => (\n          <div\n            key={marker.percentage}\n            className={marker.class}\n            style={{\n              position: 'relative', left: `${marker.percentage * 100}%`,\n            }} />\n        ))}\n        {this.props.children}\n      </div>\n    );\n  }\n}\n"]}